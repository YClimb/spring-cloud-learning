# 应用名称
spring.application.name=rocketmq-sample

# Actuator Web 访问端口
management.server.port=8081
management.endpoints.jmx.exposure.include=*
management.endpoints.web.exposure.include=*
management.endpoint.health.show-details=always

# 应用服务 WEB 访问端口
server.port=8080
# spring 静态资源扫描路径
spring.resources.static_locations=classpath:/static/

# 配置rocketmq的nameserver地址
spring.cloud.stream.rocketmq.binder.name-server=127.0.0.1:9876
# 定义name为output的binding
spring.cloud.stream.bindings.output.destination=test-topic
spring.cloud.stream.bindings.output.content-type=application/json
# 定义name为input的binding
spring.cloud.stream.bindings.input.destination=test-topic
spring.cloud.stream.bindings.input.content-type=application/json
spring.cloud.stream.bindings.input.group=test-group

# input1: 订阅 topic 为 test-topic 的消息，顺序消费所有消息(顺序消费的前提是所有消息都在一个 MessageQueue 中)
#spring.cloud.stream.bindings.input1.destination=test-topic
#spring.cloud.stream.bindings.input1.content-type=text/plain
#spring.cloud.stream.bindings.input1.group=test-group1
#spring.cloud.stream.rocketmq.bindings.input1.consumer.orderly=true

# input2: 订阅 topic 为 test-topic 的消息，异步消费 tags 为 tagStr 的消息，Consumer 端线程池个数为20
#spring.cloud.stream.bindings.input2.destination=test-topic
#spring.cloud.stream.bindings.input2.content-type=text/plain
#spring.cloud.stream.bindings.input2.group=test-group2
#spring.cloud.stream.bindings.input2.consumer.concurrency=20
#spring.cloud.stream.rocketmq.bindings.input2.consumer.orderly=false
#spring.cloud.stream.rocketmq.bindings.input2.consumer.tags=tagStr
